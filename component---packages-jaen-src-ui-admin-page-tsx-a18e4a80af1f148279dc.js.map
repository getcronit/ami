{"version":3,"file":"component---packages-jaen-src-ui-admin-page-tsx-a18e4a80af1f148279dc.js","mappings":"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","sources":["webpack://demo/../../node_modules/hash-source/src/dist/createHashSource.js","webpack://demo/../../packages/jaen/src/ui/components/AdminLogin/Card.tsx","webpack://demo/../../packages/jaen/src/ui/components/AdminLogin/DividerWithText.tsx","webpack://demo/../../packages/jaen/src/ui/components/AdminLogin/Link.tsx","webpack://demo/../../packages/jaen/src/ui/components/AdminLogin/PasswordField.tsx","webpack://demo/../../packages/jaen/src/ui/components/AdminLogin/LoginForm.tsx","webpack://demo/../../packages/jaen/src/ui/components/AdminLogin/index.tsx","webpack://demo/../../packages/jaen/src/ui/AdminLoginPage.tsx","webpack://demo/../../packages/jaen/src/ui/AdminPage.tsx"],"sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getHashPath = function getHashPath() {\n  var href = window.location.href;\n  var hashIndex = href.indexOf('#');\n  return hashIndex === -1 ? '' : href.substring(hashIndex + 1);\n};\n\nvar pushHashPath = function pushHashPath(path) {\n  return window.location.hash = path;\n};\n\nvar replaceHashPath = function replaceHashPath(path) {\n  var hashIndex = window.location.href.indexOf('#');\n  window.location.replace(window.location.href.slice(0, hashIndex >= 0 ? hashIndex : 0) + '#' + path);\n};\n\nvar getState = function getState(path) {\n  var pathname = path ? path : getHashPath();\n  return {\n    pathname: pathname,\n    search: ''\n  };\n};\n\nvar resolveInitialState = function resolveInitialState(state) {\n  if (state.pathname === '') {\n    replaceHashPath('/');\n  }\n};\n\nvar createHashSource = function createHashSource() {\n  var state = getState();\n  resolveInitialState(state);\n  return {\n    get location() {\n      return getState();\n    },\n\n    addEventListener: function addEventListener(name, fn) {\n      window.addEventListener(name, fn);\n    },\n    removeEventListener: function removeEventListener(name, fn) {\n      window.removeEventListener(name, fn);\n    },\n    history: {\n      state: state,\n      pushState: function pushState(stateObj, _, uri) {\n        state = getState(uri);\n        pushHashPath(uri);\n      },\n      replaceState: function replaceState(stateObj, _, uri) {\n        state = getState(uri);\n        replaceHashPath(uri);\n      }\n    }\n  };\n};\n\nexports.default = createHashSource;","import { Box, BoxProps, useColorModeValue } from '@chakra-ui/react'\nimport * as React from 'react'\n\nexport const Card = (props: BoxProps) => (\n  <Box\n    bg={useColorModeValue('white', 'gray.700')}\n    py=\"8\"\n    px={{ base: '4', md: '10' }}\n    shadow=\"base\"\n    rounded={{ sm: 'lg' }}\n    {...props}\n  />\n)\n","import {\n  Box,\n  Divider,\n  Flex,\n  FlexProps,\n  Text,\n  useColorModeValue\n} from '@chakra-ui/react'\nimport * as React from 'react'\n\nexport const DividerWithText = (props: FlexProps) => {\n  const {children, ...flexProps} = props\n  return (\n    <Flex align=\"center\" color=\"gray.300\" {...flexProps}>\n      <Box flex=\"1\">\n        <Divider borderColor=\"currentcolor\" />\n      </Box>\n      <Text\n        as=\"span\"\n        px=\"3\"\n        color={useColorModeValue('gray.600', 'gray.400')}\n        fontWeight=\"medium\">\n        {children}\n      </Text>\n      <Box flex=\"1\">\n        <Divider borderColor=\"currentcolor\" />\n      </Box>\n    </Flex>\n  )\n}\n","import {chakra, HTMLChakraProps, useColorModeValue} from '@chakra-ui/system'\nimport * as React from 'react'\n\nexport const Link = (props: HTMLChakraProps<'a'>) => (\n  <chakra.a\n    marginStart=\"1\"\n    href=\"#\"\n    color={useColorModeValue('teal.500', 'teal.200')}\n    _hover={{color: useColorModeValue('teal.600', 'teal.300')}}\n    display={{base: 'block', sm: 'inline'}}\n    {...props}\n  />\n)\n","import {\n  Box,\n  Flex,\n  FormControl,\n  FormLabel,\n  IconButton,\n  Input,\n  InputGroup,\n  InputProps,\n  InputRightElement,\n  useDisclosure,\n  useMergeRefs,\n  useColorModeValue as mode\n} from '@chakra-ui/react'\nimport * as React from 'react'\nimport {HiEye, HiEyeOff} from 'react-icons/hi'\n\nexport const PasswordField = React.forwardRef<HTMLInputElement, InputProps>(\n  (props, ref) => {\n    const {isOpen, onToggle} = useDisclosure()\n    const inputRef = React.useRef<HTMLInputElement>(null)\n\n    const mergeRef = useMergeRefs(inputRef, ref)\n\n    const onClickReveal = () => {\n      onToggle()\n      const input = inputRef.current\n      if (input) {\n        input.focus({preventScroll: true})\n        const length = input.value.length * 2\n        requestAnimationFrame(() => {\n          input.setSelectionRange(length, length)\n        })\n      }\n    }\n\n    return (\n      <FormControl id=\"password\">\n        <Flex justify=\"space-between\">\n          <FormLabel>Password</FormLabel>\n          <Box\n            as=\"a\"\n            color={mode('teal.600', 'blue.200')}\n            fontWeight=\"semibold\"\n            fontSize=\"sm\">\n            Forgot Password?\n          </Box>\n        </Flex>\n        <InputGroup>\n          <InputRightElement>\n            <IconButton\n              bg=\"transparent !important\"\n              variant=\"ghost\"\n              aria-label={isOpen ? 'Mask password' : 'Reveal password'}\n              icon={isOpen ? <HiEyeOff /> : <HiEye />}\n              onClick={onClickReveal}\n            />\n          </InputRightElement>\n          <Input\n            ref={mergeRef}\n            name=\"password\"\n            type={isOpen ? 'text' : 'password'}\n            autoComplete=\"current-password\"\n            required\n            {...props}\n          />\n        </InputGroup>\n      </FormControl>\n    )\n  }\n)\n\nPasswordField.displayName = 'PasswordField'\n","import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  HTMLChakraProps,\n  Input,\n  Stack\n} from '@chakra-ui/react'\nimport * as React from 'react'\nimport {PasswordField} from './PasswordField'\n\nexport interface LoginFormProps extends HTMLChakraProps<'form'> {\n  onLogin: (email: string, password: string) => void\n}\n\nexport const LoginForm = (props: LoginFormProps) => (\n  <chakra.form\n    onSubmit={e => {\n      e.preventDefault()\n      const email = e.target.email.value\n      const password = e.target.password.value\n\n      props.onLogin(email, password)\n    }}\n    {...props}>\n    <Stack spacing=\"6\">\n      <FormControl id=\"email\">\n        <FormLabel>Email address</FormLabel>\n        <Input\n          name=\"email\"\n          type=\"email\"\n          autoComplete=\"email\"\n          required\n          focusBorderColor=\"teal.500\"\n        />\n      </FormControl>\n      <PasswordField focusBorderColor=\"teal.500\" />\n      <Button type=\"submit\" colorScheme=\"teal\" size=\"lg\" fontSize=\"md\">\n        Sign in\n      </Button>\n    </Stack>\n  </chakra.form>\n)\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Button,\n  Divider,\n  Heading,\n  SimpleGrid,\n  Text,\n  useColorModeValue,\n  VisuallyHidden\n} from '@chakra-ui/react'\nimport * as React from 'react'\nimport {FaHome, FaBook} from 'react-icons/fa'\nimport {JaenLogo} from '../icons'\nimport {Card} from './Card'\nimport {DividerWithText} from './DividerWithText'\nimport {Link} from './Link'\nimport {LoginForm} from './LoginForm'\nimport {Logo} from './Logo'\n\nexport interface AdminLoginProps {\n  onHomeClick: () => void\n  onDocsClick: () => void\n  onLogin: (email: string, password: string) => void\n  onLiveDemo: () => void\n}\n\nexport const AdminLogin = (props: AdminLoginProps) => (\n  <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{base: '4', lg: '8'}}>\n    <Box maxW=\"md\" mx=\"auto\">\n      <JaenLogo\n        mx={'auto'}\n        boxSize={'16'}\n        display={'block'}\n        mb={{base: '10', md: '15'}}\n      />\n      <Heading textAlign=\"center\" size=\"xl\" fontWeight=\"extrabold\">\n        Sign in to Jaen Admin\n      </Heading>\n      <Text mt=\"4\" mb=\"8\" align=\"center\" maxW=\"md\" fontWeight=\"medium\">\n        <Text as=\"span\">Don&apos;t have an account?</Text>\n        <Link onClick={props.onLiveDemo}>Use the live demo</Link>\n      </Text>\n      <Card>\n        <LoginForm onLogin={props.onLogin} />\n        <DividerWithText mt=\"6\">or visit</DividerWithText>\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\">\n          <Button\n            color=\"currentColor\"\n            variant=\"outline\"\n            onClick={props.onDocsClick}>\n            <VisuallyHidden>Docs</VisuallyHidden>\n            <FaBook />\n          </Button>\n          <Button\n            color=\"currentColor\"\n            variant=\"outline\"\n            onClick={props.onHomeClick}>\n            <VisuallyHidden>Home</VisuallyHidden>\n            <FaHome />\n          </Button>\n        </SimpleGrid>\n      </Card>\n    </Box>\n  </Box>\n)\n\nexport default AdminLogin\n","import AdminLogin from './components/AdminLogin'\nimport {RouteComponentProps} from '@reach/router'\nimport {useAppDispatch} from '@jaen/redux'\nimport {login} from '@jaen/redux/slices/auth'\nimport {navigate} from 'gatsby'\n\nexport const AdminLoginPage = (props: RouteComponentProps) => {\n  const dispatch = useAppDispatch()\n\n  const handleLogin = (email: string, password: string) => {\n    dispatch(\n      login({\n        email,\n        password\n      })\n    )\n  }\n\n  const handleHomeClick = () => {\n    navigate('/')\n  }\n\n  const handleDocsClick = () => {\n    if (typeof window !== 'undefined') {\n      window.open('https://snek.at/products/jaen', '_blank')?.focus()\n    }\n  }\n\n  return (\n    <AdminLogin\n      onLogin={handleLogin}\n      onLiveDemo={() => {}}\n      onHomeClick={handleHomeClick}\n      onDocsClick={handleDocsClick}\n    />\n  )\n}\n","import {\n  createHistory,\n  HistorySource,\n  LocationProvider,\n  Redirect,\n  Router,\n  useLocation\n} from '@reach/router'\nimport createHashSource from 'hash-source'\nimport {\n  AdminPageShell as APSComponent,\n  SidebarItem\n} from './components/AdminPageShell'\n\nimport {BsHouse} from '@react-icons/all-files/bs/BsHouse'\nimport {FaPager} from '@react-icons/all-files/fa/FaPager'\nimport {BsFiles} from '@react-icons/all-files/bs/BsFiles'\nimport {BiNotification} from '@react-icons/all-files/bi/BiNotification'\n\nimport {RouteComponentProps, useNavigate} from '@reach/router'\nimport React from 'react'\nimport {usePluginStore} from 'react-pluggable'\nimport {AdminFunctions} from '@jaen/UIPlugin'\nimport AdminToolbar from './AdminToolbar'\nimport {PagesContainer} from '@jaen/internal-plugins/pages/ui/tabs/Pages'\nimport {FilesContainer} from '@jaen/internal-plugins/pages/ui/tabs/Files'\nimport {NotificationContext} from '@jaen/internal-plugins/notify/services/notification/context'\nimport {NotifyTab} from '@jaen/internal-plugins/notify/ui/components/tabs/Notify'\nimport AdminLogin from './components/AdminLogin'\nimport {AdminLoginPage} from './AdminLoginPage'\nimport {useAppSelector, withRedux} from '@jaen/redux'\nimport {SettingsTab} from '@jaen/ui/components/Settings/SettingsTab.stories'\nimport {SettingsContainer} from './SettingsTab'\n\nconst AdminPage = withRedux((props: any) => {\n  if (typeof window === 'undefined') {\n    return null\n  }\n\n  const source = createHashSource()\n  const history = createHistory(source as HistorySource)\n\n  const isAuthenticated = useAppSelector(state => state.auth.isAuthenticated)\n\n  return (\n    <LocationProvider history={history}>\n      <Router primary={false}>\n        {isAuthenticated ? null : <AdminLoginPage default path=\"/login\" />}\n      </Router>\n    </LocationProvider>\n  )\n})\n\nexport default AdminPage\n"],"names":["replaceHashPath","path","hashIndex","window","location","href","indexOf","replace","slice","getState","pathname","substring","search","exports","state","resolveInitialState","addEventListener","name","fn","removeEventListener","history","pushState","stateObj","_","uri","hash","replaceState","Card","props","Box","bg","useColorModeValue","py","px","base","md","shadow","rounded","sm","DividerWithText","children","flexProps","Flex","align","color","flex","Divider","borderColor","Text","as","fontWeight","Link","marginStart","_hover","display","PasswordField","React","ref","useDisclosure","isOpen","onToggle","inputRef","mergeRef","useMergeRefs","id","justify","mode","fontSize","variant","icon","onClick","input","current","focus","preventScroll","length","value","requestAnimationFrame","setSelectionRange","type","autoComplete","required","displayName","LoginForm","onSubmit","e","preventDefault","email","target","password","onLogin","Stack","spacing","focusBorderColor","colorScheme","size","minH","lg","maxW","mx","boxSize","mb","Heading","textAlign","mt","onLiveDemo","SimpleGrid","columns","onDocsClick","onHomeClick","AdminLoginPage","dispatch","useAppDispatch","login","navigate","open","withRedux","source","createHashSource","createHistory","isAuthenticated","useAppSelector","auth","LocationProvider","Router","primary","default"],"sourceRoot":""}