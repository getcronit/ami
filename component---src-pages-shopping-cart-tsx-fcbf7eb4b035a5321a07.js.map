{"version":3,"file":"component---src-pages-shopping-cart-tsx-fcbf7eb4b035a5321a07.js","mappings":"kPAqCA,OAAeA,EAAAA,EAAAA,cA5BM,EAAEC,WACrB,MAAM,SAACC,EAAD,eAAWC,EAAX,mBAA2BC,IAAsBC,EAAAA,EAAAA,MACjD,OAACC,EAAD,OAASC,EAAT,QAAiBC,IAAWC,EAAAA,EAAAA,MAMlC,OACEC,EAAAA,EAAAA,MAACC,EAAAA,EAAD,CAAQV,KAAMA,EAAd,WACEW,EAAAA,EAAAA,KAACC,EAAAA,GAAD,CACEZ,KAAMA,EACNa,MAAOZ,EACPa,SAAUX,EACVY,iBAAkBb,EAClBc,aAXmB,KACvBV,QAYEK,EAAAA,EAAAA,KAACM,EAAAA,EAAD,CACEhB,SAAUA,EACVI,OAAQA,EACRa,SAASP,EAAAA,EAAAA,KAAAA,IAAAA,CAAAA,SAAAA,gCACTQ,KAAM,GACNZ,QAAS,IAAMA,WAMkB,CACvCa,YAAa,kB,qECpBR,MAAMC,EACD,WAAG,WAEbC,eAEkB,mBAACC,GACK,oBAAXC,QAEXC,aAAaC,QAAQL,EAAgBM,IAAKC,KAAKC,UAAUN,IAGzC,qBAChB,MAAsB,oBAAXC,OAA+B,GAEnCI,KAAKE,MAAMN,OAAOC,aAAaM,QAAQV,EAAgBM,MAAQ,MAGpD,qBAACK,GACnB,MAAMC,EAAWZ,EAAgBa,cACjCD,EAASE,KAAKH,GAEdX,EAAgBe,YAAYH,GAGT,sBAACI,EAAmBC,GACvC,MAAML,EAAWZ,EAAgBa,cAC3BF,EAAUC,EAASM,MAAKC,GAAKA,EAAEC,KAAOJ,IAExCL,IACFA,EAAQM,SAAWA,GAGrBjB,EAAgBe,YAAYH,GAGL,0BAACI,GACxB,MAAMJ,EAAWZ,EAAgBa,cAC3BQ,EAAQT,EAASU,WAAUH,GAAKA,EAAEC,KAAOJ,KAEhC,IAAXK,IAEJT,EAASW,OAAOF,EAAO,GAEvBrB,EAAgBe,YAAYH,KAIzB,SAAS7B,IACd,MAAOH,EAAUmC,GAAeS,EAAAA,SAAexB,EAAgBa,eAO/D,OALAW,EAAAA,WAAgB,KACd,MAAM5C,EAAWoB,EAAgBa,cACjCE,EAAYnC,KACX,IAEI,CACLA,WACA6C,cAAgBd,IACdX,EAAgByB,cAAcd,GAC9BI,EAAYf,EAAgBa,gBAE9BhC,eAAgB,CAACmC,EAAmBC,KAClCjB,EAAgBnB,eAAemC,EAAWC,GAC1CF,EAAYf,EAAgBa,gBAE9B/B,mBAAqBkC,IACnBhB,EAAgBlB,mBAAmBkC,GACnCD,EAAYf,EAAgBa","sources":["webpack://jaen-template-shopify/./src/pages/shopping-cart.tsx","webpack://jaen-template-shopify/./src/services/wishlist.ts"],"sourcesContent":["import React from 'react'\nimport {useDisclosure} from '@chakra-ui/hooks'\nimport {graphql, navigate, PageProps} from 'gatsby'\nimport {useWishlist} from '../services/wishlist'\nimport {WishlistTemplate} from '../components/templates'\nimport {connectPage} from '@jaenjs/jaen'\nimport {ContactModal} from '../components/organisms/ContactModal'\nimport {Layout} from '../components/Layout'\n\nconst WishlistPage = ({path}: PageProps) => {\n  const {wishlist, updateQuantity, removeFromWishlist} = useWishlist()\n  const {isOpen, onOpen, onClose} = useDisclosure()\n\n  const handleRequestNow = () => {\n    onOpen()\n  }\n\n  return (\n    <Layout path={path}>\n      <WishlistTemplate\n        path={path}\n        items={wishlist}\n        onRemove={removeFromWishlist}\n        onQuantityChange={updateQuantity}\n        onRequestNow={handleRequestNow}\n      />\n      <ContactModal\n        wishlist={wishlist}\n        isOpen={isOpen}\n        heading={<p>Kaufanfrage (unverbindlich)</p>}\n        text={''}\n        onClose={() => onClose()}\n      />\n    </Layout>\n  )\n}\n\nexport default connectPage(WishlistPage, {\n  displayName: 'WishlistPage'\n})\n\nexport const query = graphql`\n  query($jaenPageId: String!) {\n    ...JaenPageQuery\n  }\n`\n","import {ShopifyProduct} from '@snek-at/gatsby-theme-shopify'\nimport {IGatsbyImageData} from 'gatsby-plugin-image'\nimport React from 'react'\n\nexport interface WishlistProduct {\n  id: string\n  handle: string\n  title: string\n  price: number\n  compareAtPrice: number | null\n  priceFormatted: string\n  compareAtPriceFormatted: string | null\n  categoriesString: string\n  tagsString: string\n  featuredMedia: ShopifyProduct['featuredMedia']\n  quantity: number\n}\n\nexport class WishlistService {\n  static key = 'wishlist'\n\n  constructor() {}\n\n  static setWishlist(list: WishlistProduct[]) {\n    if (typeof window === 'undefined') return\n\n    localStorage.setItem(WishlistService.key, JSON.stringify(list))\n  }\n\n  static getWishlist(): WishlistProduct[] {\n    if (typeof window === 'undefined') return []\n\n    return JSON.parse(window.localStorage.getItem(WishlistService.key) || '[]')\n  }\n\n  static addToWishlist(product: WishlistProduct) {\n    const wishList = WishlistService.getWishlist()\n    wishList.push(product)\n\n    WishlistService.setWishlist(wishList)\n  }\n\n  static updateQuantity(productId: string, quantity: number) {\n    const wishList = WishlistService.getWishlist()\n    const product = wishList.find(p => p.id === productId)\n\n    if (product) {\n      product.quantity = quantity\n    }\n\n    WishlistService.setWishlist(wishList)\n  }\n\n  static removeFromWishlist(productId: string) {\n    const wishList = WishlistService.getWishlist()\n    const index = wishList.findIndex(p => p.id === productId)\n\n    if (index === -1) return\n\n    wishList.splice(index, 1)\n\n    WishlistService.setWishlist(wishList)\n  }\n}\n\nexport function useWishlist() {\n  const [wishlist, setWishlist] = React.useState(WishlistService.getWishlist())\n\n  React.useEffect(() => {\n    const wishlist = WishlistService.getWishlist()\n    setWishlist(wishlist)\n  }, [])\n\n  return {\n    wishlist,\n    addToWishlist: (product: WishlistProduct) => {\n      WishlistService.addToWishlist(product)\n      setWishlist(WishlistService.getWishlist())\n    },\n    updateQuantity: (productId: string, quantity: number) => {\n      WishlistService.updateQuantity(productId, quantity)\n      setWishlist(WishlistService.getWishlist())\n    },\n    removeFromWishlist: (productId: string) => {\n      WishlistService.removeFromWishlist(productId)\n      setWishlist(WishlistService.getWishlist())\n    }\n  }\n}\n"],"names":["connectPage","path","wishlist","updateQuantity","removeFromWishlist","useWishlist","isOpen","onOpen","onClose","useDisclosure","_jsxs","Layout","_jsx","WishlistTemplate","items","onRemove","onQuantityChange","onRequestNow","ContactModal","heading","text","displayName","WishlistService","constructor","list","window","localStorage","setItem","key","JSON","stringify","parse","getItem","product","wishList","getWishlist","push","setWishlist","productId","quantity","find","p","id","index","findIndex","splice","React","addToWishlist"],"sourceRoot":""}