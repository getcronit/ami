{"version":3,"file":"component---node-modules-jaenjs-jaen-src-ui-login-page-tsx-2f02df8f258d3f0bcac4.js","mappings":"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","sources":["webpack://jaen-template-shopify/./node_modules/@jaenjs/jaen/src/ui/components/AdminLogin/Card.tsx","webpack://jaen-template-shopify/./node_modules/@jaenjs/jaen/src/ui/components/AdminLogin/Link.tsx","webpack://jaen-template-shopify/./node_modules/@jaenjs/jaen/src/ui/components/AdminLogin/PasswordField.tsx","webpack://jaen-template-shopify/./node_modules/@jaenjs/jaen/src/ui/components/AdminLogin/LoginForm.tsx","webpack://jaen-template-shopify/./node_modules/@jaenjs/jaen/src/ui/components/AdminLogin/index.tsx","webpack://jaen-template-shopify/./node_modules/@jaenjs/jaen/src/ui/LoginPage.tsx"],"sourcesContent":["import { Box, BoxProps, useColorModeValue } from '@chakra-ui/react'\nimport * as React from 'react'\n\nexport const Card = (props: BoxProps) => (\n  <Box\n    bg={useColorModeValue('white', 'gray.700')}\n    py=\"8\"\n    px={{ base: '4', md: '10' }}\n    shadow=\"base\"\n    rounded={{ sm: 'lg' }}\n    {...props}\n  />\n)\n","import {chakra, HTMLChakraProps, useColorModeValue} from '@chakra-ui/system'\nimport * as React from 'react'\n\nexport const Link = (props: HTMLChakraProps<'a'>) => (\n  <chakra.a\n    marginStart=\"1\"\n    href=\"#\"\n    color={useColorModeValue('teal.500', 'teal.200')}\n    _hover={{color: useColorModeValue('teal.600', 'teal.300')}}\n    display={{base: 'block', sm: 'inline'}}\n    {...props}\n  />\n)\n","import {\n  Box,\n  Flex,\n  FormControl,\n  FormLabel,\n  IconButton,\n  Input,\n  InputGroup,\n  InputProps,\n  InputRightElement,\n  useDisclosure,\n  useMergeRefs,\n  useColorModeValue as mode\n} from '@chakra-ui/react'\nimport * as React from 'react'\nimport {HiEye, HiEyeOff} from 'react-icons/hi'\n\nexport const PasswordField = React.forwardRef<HTMLInputElement, InputProps>(\n  (props, ref) => {\n    const {isOpen, onToggle} = useDisclosure()\n    const inputRef = React.useRef<HTMLInputElement>(null)\n\n    const mergeRef = useMergeRefs(inputRef, ref)\n\n    const onClickReveal = () => {\n      onToggle()\n      const input = inputRef.current\n      if (input) {\n        input.focus({preventScroll: true})\n        const length = input.value.length * 2\n        requestAnimationFrame(() => {\n          input.setSelectionRange(length, length)\n        })\n      }\n    }\n\n    return (\n      <FormControl id=\"password\">\n        <Flex justify=\"space-between\">\n          <FormLabel>Password</FormLabel>\n          <Box\n            as=\"a\"\n            color={mode('teal.600', 'blue.200')}\n            fontWeight=\"semibold\"\n            fontSize=\"sm\">\n            Forgot Password?\n          </Box>\n        </Flex>\n        <InputGroup>\n          <InputRightElement>\n            <IconButton\n              bg=\"transparent !important\"\n              variant=\"ghost\"\n              aria-label={isOpen ? 'Mask password' : 'Reveal password'}\n              icon={isOpen ? <HiEyeOff /> : <HiEye />}\n              onClick={onClickReveal}\n            />\n          </InputRightElement>\n          <Input\n            ref={mergeRef}\n            name=\"password\"\n            type={isOpen ? 'text' : 'password'}\n            autoComplete=\"current-password\"\n            required\n            {...props}\n          />\n        </InputGroup>\n      </FormControl>\n    )\n  }\n)\n\nPasswordField.displayName = 'PasswordField'\n","import {\n  Button,\n  chakra,\n  FormControl,\n  FormLabel,\n  HTMLChakraProps,\n  Input,\n  Stack\n} from '@chakra-ui/react'\nimport * as React from 'react'\nimport {PasswordField} from './PasswordField'\n\nexport interface LoginFormProps extends HTMLChakraProps<'form'> {\n  onLogin: (email: string, password: string) => void\n}\n\nexport const LoginForm = (props: LoginFormProps) => (\n  <chakra.form\n    onSubmit={(e: any) => {\n      e.preventDefault()\n      const email = e.target.email.value\n      const password = e.target.password.value\n\n      props.onLogin(email, password)\n    }}\n    {...props}>\n    <Stack spacing=\"6\">\n      <FormControl id=\"email\">\n        <FormLabel>Email address</FormLabel>\n        <Input\n          name=\"email\"\n          type=\"email\"\n          autoComplete=\"email\"\n          required\n          focusBorderColor=\"teal.500\"\n        />\n      </FormControl>\n      <PasswordField focusBorderColor=\"teal.500\" />\n      <Button type=\"submit\" colorScheme=\"teal\" size=\"lg\" fontSize=\"md\">\n        Sign in\n      </Button>\n    </Stack>\n  </chakra.form>\n)\n","import {\n  Alert,\n  AlertDescription,\n  AlertIcon,\n  AlertTitle,\n  Box,\n  Button,\n  Divider,\n  Heading,\n  SimpleGrid,\n  Text,\n  useColorModeValue,\n  VisuallyHidden\n} from '@chakra-ui/react'\nimport * as React from 'react'\nimport {FaHome, FaBook} from 'react-icons/fa'\nimport {JaenLogo} from '../icons'\nimport {Card} from './Card'\nimport {DividerWithText} from './DividerWithText'\nimport {Link} from './Link'\nimport {LoginForm} from './LoginForm'\nimport {Logo} from './Logo'\n\nexport interface AdminLoginProps {\n  onHomeClick: () => void\n  onDocsClick: () => void\n  onLogin: (email: string, password: string) => void\n  onLiveDemo: () => void\n}\n\nexport const AdminLogin = (props: AdminLoginProps) => (\n  <Box\n    bg={useColorModeValue('gray.50', 'inherit')}\n    minH=\"100vh\"\n    py=\"12\"\n    px={{base: '4', lg: '8'}}>\n    <Box maxW=\"md\" mx=\"auto\">\n      <JaenLogo\n        mx={'auto'}\n        boxSize={'16'}\n        display={'block'}\n        mb={{base: '10', md: '15'}}\n      />\n      <Heading textAlign=\"center\" size=\"xl\" fontWeight=\"extrabold\">\n        Sign in to Jaen Admin\n      </Heading>\n      <Text mt=\"4\" mb=\"8\" align=\"center\" maxW=\"md\" fontWeight=\"medium\">\n        <Text as=\"span\">Don&apos;t have an account?</Text>\n        <Link onClick={props.onLiveDemo}>Use the live demo</Link>\n      </Text>\n      <Card>\n        <LoginForm onLogin={props.onLogin} />\n        <DividerWithText mt=\"6\">or visit</DividerWithText>\n        <SimpleGrid mt=\"6\" columns={3} spacing=\"3\">\n          <Button\n            color=\"currentColor\"\n            variant=\"outline\"\n            onClick={props.onDocsClick}>\n            <VisuallyHidden>Docs</VisuallyHidden>\n            <FaBook />\n          </Button>\n          <Button\n            color=\"currentColor\"\n            variant=\"outline\"\n            onClick={props.onHomeClick}>\n            <VisuallyHidden>Home</VisuallyHidden>\n            <FaHome />\n          </Button>\n        </SimpleGrid>\n      </Card>\n    </Box>\n  </Box>\n)\n\nexport default AdminLogin\n","import AdminLogin from './components/AdminLogin'\nimport {useAppDispatch, useAppSelector, withRedux} from '../redux'\nimport {login, demoLogin} from '../redux/slices/auth'\nimport {navigate, PageProps} from 'gatsby'\nimport React from 'react'\nimport {SEO} from '../internal-plugins/pages'\nimport {GlobalStyle, LightMode} from '@chakra-ui/react'\n\nexport const AdminLoginPage = withRedux((props: PageProps) => {\n  const dispatch = useAppDispatch()\n\n  const isAuthenticated = useAppSelector(state => state.auth.isAuthenticated)\n\n  React.useEffect(() => {\n    if (isAuthenticated) {\n      navigate('/admin')\n    }\n  }, [isAuthenticated])\n\n  const handleLogin = (email: string, password: string) => {\n    dispatch(\n      login({\n        email,\n        password\n      })\n    )\n  }\n\n  const handleLiveDemo = () => {\n    dispatch(demoLogin({}))\n  }\n\n  const handleHomeClick = () => {\n    navigate('/')\n  }\n\n  const handleDocsClick = () => {\n    if (typeof window !== 'undefined') {\n      window.open('https://snek.at/products/jaen', '_blank')?.focus()\n    }\n  }\n\n  return (\n    <LightMode>\n      <GlobalStyle />\n      <SEO\n        pagePath={props.path}\n        pageMeta={{\n          title: 'Jaen Admin | Login'\n        }}\n      />\n      <AdminLogin\n        onLogin={handleLogin}\n        onLiveDemo={handleLiveDemo}\n        onHomeClick={handleHomeClick}\n        onDocsClick={handleDocsClick}\n      />\n    </LightMode>\n  )\n})\n\nexport default AdminLoginPage\n"],"names":["Card","props","Box","bg","useColorModeValue","py","px","base","md","shadow","rounded","sm","Link","marginStart","href","color","_hover","display","PasswordField","React","ref","useDisclosure","isOpen","onToggle","inputRef","mergeRef","useMergeRefs","id","Flex","justify","as","mode","fontWeight","fontSize","variant","icon","onClick","input","current","focus","preventScroll","length","value","requestAnimationFrame","setSelectionRange","name","type","autoComplete","required","displayName","LoginForm","onSubmit","e","preventDefault","email","target","password","onLogin","Stack","spacing","focusBorderColor","colorScheme","size","minH","lg","maxW","mx","boxSize","mb","Heading","textAlign","Text","mt","align","onLiveDemo","DividerWithText","SimpleGrid","columns","onDocsClick","onHomeClick","AdminLoginPage","withRedux","dispatch","useAppDispatch","isAuthenticated","useAppSelector","state","auth","navigate","pagePath","path","pageMeta","title","login","demoLogin","window","open"],"sourceRoot":""}